<apex:page showHeader="false" controller="StandardResolutionController">
   <c:CommonIncludes />
<!--<script type="text/javascript" src="{!$Resource.ExtJS}/ext-all-debug.js"></script>-->
   
   <script>
   
   function callNewPage(){
        window.parent.addTab("StandardResolutionPage","StandardResolution","StandardResolution");
	}
	var isLookup = "{!$CurrentPage.parameters.islookup}";
     function saveRecords(){
     	
     	if(isLookup){     	
     	  window.parent.refreshDocs();
          window.parent.closePopup();
          
       }
     }
     var wid = '{!$CurrentPage.parameters.wid}';
        function closeWindow(){
            if(isLookup){
              window.parent.refreshDocs();                
              window.parent.closePopup();
           }else{
                window.parent.refreshList();
                window.parent.closeTab(wid);
           }
        }   
        var disableTrue = true;
        Ext.onReady(function(){
   
         Ext.QuickTips.init(); 
         if(isLookup){
            disableTrue = true;
          }else{ 
          disableTrue = false; }

        // This function renders a block of buttons
        var NewBtnHandler = function(button,event){  callNewPage();  };
        var SaveBtnHandler = function(button,event) {  save(); };
        var CopyBtnHandler = function(button,event) {  /*alert('Copy!');*/ };
        var DeleteBtnHandler = function(button,event) {  /*deleteIncident();*/ };
        
        var ClearBtnHandler = function(button,event){ /* clearStandardDescription(); */ }
        var NextBtnHandler = function (button,event) { };
        var PreviuosBtnHandler = function (button,event) { };  
        
        var SamplePanel = Ext.extend(Ext.Panel, {
            renderTo: 'btnToolbar',
            defaults: {bodyStyle:'border:0px;padding:0px;margin:0px;zoom:0px;'}
        });
        
          new SamplePanel({
            title: '',
            cls:'toolSpCls',
            bodyStyle:'border:0px;padding:0px;margin:0px;zoom:0px;',
            tbar: [{
                scale: 'medium',
				tooltipType: 'title',
                tooltip: '{!$Label.new}',
                iconCls: 'bmcNew',
                hidden:disableTrue,
                listeners: {
                    mouseover: function(){
                    this.setIconClass('bmcNewOn');    
                     },
                     mouseout: function(){
                    this.setIconClass('bmcNew');          
                     }
                },
                handler:NewBtnHandler
            },' ',{
                scale: 'medium',
				tooltipType: 'title',
                tooltip: '{!$Label.save}',
                iconCls: 'bmcSave',
				listeners: {
                    mouseover: function(){
                    this.setIconClass('bmcSaveOn');    
                     },
                     mouseout: function(){
                    this.setIconClass('bmcSave');          
                     }
                },
                handler:SaveBtnHandler
            },' ',{
                scale: 'medium',
				tooltipType: 'title',
                tooltip: '{!$Label.copy}',
                iconCls: 'bmcCopy',
                disabled:'true',
                hidden:disableTrue,
                listeners: {
                    mouseover: function(){
                    this.setIconClass('bmcCopyOn');    
                     },
                     mouseout: function(){
                    this.setIconClass('bmcCopy');          
                     }
                },
                handler:CopyBtnHandler
            },' ','-',' ',{
                scale: 'medium',
				tooltipType: 'title',
                tooltip: '{!$Label.delete}',
                iconCls: 'bmcDelete',
                disabled:'true',
				listeners: {
                    mouseover: function(){
                    this.setIconClass('bmcDeleteOn');    
                     },
                     mouseout: function(){
                    this.setIconClass('bmcDelete');          
                     }
                },
                handler:DeleteBtnHandler
            },' ',{
                scale: 'medium',
                tooltipType: 'title',
                tooltip: '{!$Label.clear}',
                iconCls: 'bmcClear',
                disabled:'true',
                hidden:disableTrue,
                listeners: {
                    mouseover: function(){
                    this.setIconClass('bmcClearOn');    
                     },
                     mouseout: function(){
                    this.setIconClass('bmcClear');          
                     }
                },
                handler:ClearBtnHandler
            },
            new Ext.Toolbar.Fill(),
            {
                scale: 'medium',
                iconCls: 'bmcPrevious',
				tooltipType: 'title',
                tooltip: '{!$Label.previousRecord}',
                disabled:'true',
                hidden:disableTrue,
                handler:PreviuosBtnHandler,
               
            },' ',{
                scale: 'medium',
                iconCls: 'bmcNext',
				tooltipType: 'title',
                tooltip: '{!$Label.nextRecord}',
                disabled:'true',
                hidden:disableTrue,
                handler:NextBtnHandler,
                
            }
          ]

        });
    });


    </script>
    <apex:outputPanel title="Style classes"> 
        <apex:stylesheet value="{!$Resource.NIC1}"/>
        <apex:stylesheet value="{!$Resource.ExtJS}/resources/css/ext-all.css"/>
        
        <apex:stylesheet value="{!URLFOR($Resource.BMCStyle, 'BMCStyleSheet.css')}"/>             
        <apex:stylesheet value="{!URLFOR($Resource.ExtJSStyle, 'ExtJSStyleSheet.css')}"/> 

    </apex:outputPanel>
     
    
    <apex:outputPanel >
    <apex:form >
    <c:ValidationComponent errorMsgList="{!messageString}" id="validationComponent"></c:ValidationComponent>
        
     <apex:actionFunction action="{!save}" name="save" reRender="headerId" reRender="validationComponent" oncomplete="showError();saveRecords();"/>
     <apex:actionFunction action="{!newStdResolution}" name="newStdResolution" reRender="resolutionPanel,headerId"/>
      <div id="capsule" class="CapsuleDiv1">
      		 <table class="clsMainTable" cellspacing="0" cellpadding="0">
            	
        		<tr class="clsRowGreyBg">
           			<td>
                  		<div id="btnToolbar"></div>
		            </td>
        		</tr>  
        		<tr>
            		<td class="clsTableS" cellspacing="0" cellpadding="0">
                  		<apex:outputPanel id="resolutionPanel"> 
                      		<td class="clsTableS" cellspacing="0" cellpadding="0">
                             
                             <tr>
                                   <td class="clsInputBoldLabelTDI" >
                                      <apex:outputLabel value="{!$Label.standardResolution}"/></td>
                             </tr>
                      		 <tr>
                                   <td class="clsInputTextAreaTD">
                                            <apex:inputTextarea value="{!standardResolution.resolution__c}" styleClass="clsInputTextAreaPgWoSidePanel" />
                                   </td>
                            </tr>
                            <tr>
                                   <td><div class="div13pxVspacing"/></td><td></td>
                             </tr>
                           <tr>
                                   <td class="clsInputCheckBox">
                                        <apex:inputField value="{!standardResolution.inactive__c}"  />
                                         <apex:outputLabel value="{!$Label.inactive}" styleClass="clsInputCheckBoxLabel"/>
                                    </td>
                             </tr>
                                </td>    
                              
                               </apex:outputPanel>
                              </td>
                              </tr>
                               </table>
                             
                        
                       <tr class="clsRowGreyBg" valign="middle" width="5%">
                                <td valign="middle" style="width: 100%">
                                    <table border="0" cellpadding="0" cellspacing="0" width="100%">
                                        <tr>
                                            <td>
                                                 
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>  

                        </div>
                   
                                       
          </apex:form>                           
    </apex:outputPanel>
   
    
   
</apex:page>
                            	