<apex:page showHeader="false" controller="StandardDescriptionController">
<c:CommonIncludes />
    <script>
    
       var standardDescriptionCategory ;               
       var standardDescriptionId ;
       var errormsg;
       
		function callCopyPage(){
        	window.parent.addTab("StandardDescriptionPage?copyId=" + standardDescriptionId,"StandardDescription","StandardDescription");
		}
		

        var isLookup = "{!$CurrentPage.parameters.islookup}";
	    
        function saveRecords(){

     	if(isLookup){     	
     	  window.parent.refreshDocs();
          window.parent.closePopup();
          
       }
     }
     var wid = '{!$CurrentPage.parameters.wid}';
        function closeWindow(){
            if(isLookup){
              window.parent.refreshDocs();                
              window.parent.closePopup();
           }else{
                window.parent.refreshList();
                window.parent.closeTab(wid);
           }
        }   
        
        var disableTrue = true;
        Ext.onReady(function(){
    
         Ext.QuickTips.init(); 
         if(isLookup){
            disableTrue = true;
          }else{ 
          disableTrue = false; }
   
        // This function renders a block of buttons
        var NewBtnHandler = function(button,event){ openPage("StandardDescriptionPage","StandardDescription","StandardDescription"); };
        var SaveBtnHandler = function(button,event) {  save(); };
        var CopyBtnHandler = function(button,event) {  callCopyPage(); };
        var DeleteBtnHandler = function(button,event) { 
        												 Ext.MessageBox.confirm('Delete', 'Are you sure ?', function(btn){
														   if(btn === 'yes'){
														           deleteSTDDescription();
														   }});
        												 };
                var ResetBtnHandler = function(button,event) {resetStdDesc(); };
        var ClearBtnHandler = function(button,event){ clearStdDescription(); }
        var NextBtnHandler = function (button,event) { nextSDBtnHandler1();};
        var PreviuosBtnHandler = function (button,event) { previousSDBtnHandler1();};  
        
        var SamplePanel = Ext.extend(Ext.Panel, {

            renderTo: 'btnToolbar',
            defaults: {bodyStyle:'border:0px;padding:0px;margin:0px;zoom:0px;'}
        });
        
        new SamplePanel({
            title: '',
            cls:'toolSpCls',
             bodyStyle:'border:0px;padding:0px;margin:0px;zoom:0px;',
            tbar: [{
                scale: 'medium',
				tooltipType: 'title',
                tooltip: '{!$Label.new}',
                iconCls: 'bmcNew',
                hidden:disableTrue,
                listeners: {
                    mouseover: function(){
                    this.setIconClass('bmcNewOn');    
                     },
                     mouseout: function(){
                    this.setIconClass('bmcNew');          
                     }
                },                
                handler:NewBtnHandler
            },' ',{
                scale: 'medium',
				tooltipType: 'title',
                tooltip: '{!$Label.save}',
                iconCls: 'bmcSave',
                listeners: {
                    mouseover: function(){
                    this.setIconClass('bmcSaveOn');    
                     },
                     mouseout: function(){
                    this.setIconClass('bmcSave');          
                     }
                },                
                handler:SaveBtnHandler
            },' ',{
                scale: 'medium',
                iconCls: 'bmcCopy',
				tooltipType: 'title',
                tooltip: '{!$Label.copy}',
                id:'copyId',
                hidden:disableTrue,
                listeners: {
                    mouseover: function(){
                    this.setIconClass('bmcCopyOn');    
                     },
                     mouseout: function(){
                    this.setIconClass('bmcCopy');          
                     }
                },                
                handler:CopyBtnHandler
            },' ','-',' ',{
                scale: 'medium',
                iconCls: 'bmcDelete',
				tooltipType: 'title',
                tooltip: '{!$Label.delete}',
                id:'deleteId',
                listeners: {
                    mouseover: function(){
                    this.setIconClass('bmcDeleteOn');    
                     },
                     mouseout: function(){
                    this.setIconClass('bmcDelete');          
                     }
                },                
                handler:DeleteBtnHandler
            },' ',{
                scale: 'medium',
                iconCls: 'bmcClear',
				tooltipType: 'title',
                tooltip: '{!$Label.clear}',
                id:'clearId',
                hidden:disableTrue,
                listeners: {
                    mouseover: function(){
                    this.setIconClass('bmcClearOn');    
                     },
                     mouseout: function(){
                    this.setIconClass('bmcClear');          
                     }
                },                
                handler:ClearBtnHandler
            },' ',{
                scale: 'medium',
                iconCls: 'bmcReset',
				tooltipType: 'title',
                tooltip: '{!$Label.Reset}',
                id:'resetId',
                hidden:disableTrue,
                listeners: {
                    mouseover: function(){
                    this.setIconClass('bmcResetOn');    
                     },
                     mouseout: function(){
                    this.setIconClass('bmcReset');          
                     }
                },                
                handler:ResetBtnHandler
            },
            new Ext.Toolbar.Fill(),
            {
                scale: 'medium',
                iconCls: 'bmcPrevious',
				tooltipType: 'title',
                tooltip: '{!$Label.previousRecord}',
                hidden:disableTrue,
                handler:PreviuosBtnHandler,
                
            },' ',{
                scale: 'medium',
                iconCls: 'bmcNext',
				tooltipType: 'title',
                tooltip: '{!$Label.nextRecord}',
                hidden:disableTrue,
                handler:NextBtnHandler,
                
            }]
        });
        
        standardDescriptionId = '{!standardDescription.Id}';    
        if(standardDescriptionId == null ||standardDescriptionId == ''){                
        Ext.getCmp('deleteId').setDisabled(true);
        Ext.getCmp('copyId').setDisabled(true);
         Ext.getCmp('clearId').setDisabled(true); 
        }
    });
    
    var SDIdSet=window.parent.returnListOfId();
        function previousSDBtnHandler1(){
        	var idSetString='';
			var i=0;
			while(SDIdSet.length > i){
				if(idSetString==''){
					idSetString='\''+SDIdSet[i]+'\'';
				}else{
					idSetString=idSetString+','+'\''+SDIdSet[i]+'\'';
				}
				i++;
			}
			previousSDBtnHandler(idSetString);
        }

       function nextSDBtnHandler1(){
        	var idSetString='';
			var i=0;
			while(SDIdSet.length > i){
				if(idSetString==''){
					idSetString='\''+SDIdSet[i]+'\'';
				}else{
					idSetString=idSetString+','+'\''+SDIdSet[i]+'\'';
				}
				i++;
			}
			nextSDBtnHandler(idSetString);
      } 
    
      function buttonValidator() {
       
       if((standardDescriptionCategory != null && standardDescriptionCategory != '')&&(errormsg == null||errormsg ==''||errormsg=='Saved successfully.')){   
  
        Ext.getCmp('deleteId').setDisabled(false);
        Ext.getCmp('copyId').setDisabled(false);
        Ext.getCmp('clearId').setDisabled(false);
       }  
     }
    
    

     function clearDescription(){
		document.getElementById('{!$Component.frm.Category__c_id_categorydescription__c}').value = '';
	}
        								
    </script>
    
     <apex:outputPanel id="panelId">
        <script>
        
           standardDescriptionCategory = '{!standardDescription.categoryId__c}';               
           standardDescriptionId = '{!standardDescription.Id}';      
        
        </script>
        </apex:outputPanel>
        
        <apex:outputPanel id="errorId">
        <script>
        
           errormsg = '{!messageString}';               
                
        
        </script>
        </apex:outputPanel>
         <apex:outputPanel id="titlePanel">
        	<script>
	            function updateList(){
	                saveRecords();
	                window.parent.refreshList();
	            }
        
        </script>
    </apex:outputPanel>  
    <div id="capsule" class="CapsuleDiv1">
    <apex:outputPanel >
    <apex:form id="frm">
     <c:ValidationComponent errorMsgList="{!messageString}" id="validationComponent"></c:ValidationComponent>
     <apex:outputPanel id="dummy"></apex:outputPanel>
     <apex:actionFunction action="{!save}" name="save" reRender="headerId,validationComponent,panelId,errorId" oncomplete="showError();updateList();buttonValidator();"/>
     
     <apex:actionFunction action="{!deleteSTDDescription}" name="deleteSTDDescription" onComplete="closeWindow();"/>
     <apex:actionFunction action="{!newStdDescription}" name="newStdDescription" reRender="dummyoutputpanel,headerId"/>
     <apex:actionFunction action="{!clear}" name="clearStdDescription" reRender="dummyoutputpanel" onComplete="clearDescription();"/>
     <apex:actionFunction action="{!resetStdDesc}" name="resetStdDesc" />     
     <apex:actionFunction name="setCategoryNext" action="{!categoryQuery}" reRender="dummyoutputpanel"> 
            <apex:param assignTo="{!savedId}" name="savedName" value=""/>
     </apex:actionFunction>
     
      <apex:actionFunction action="{!nextBtnHandler}" name="nextSDBtnHandler" 
            						rerender="dummyoutputpanel" >
            						<apex:param assignTo="{!tempString}" name="idSetString" value=""/>   
	  </apex:actionFunction>
	  <apex:actionFunction action="{!previousBtnHandler}" name="previousSDBtnHandler" 
	           						rerender="dummyoutputpanel" >
	           						<apex:param assignTo="{!tempString}" name="idSetString" value=""/>  
	  </apex:actionFunction>
      
      

            <table class="clsMainTable" cellspacing="0" cellpadding="0">
                
              <tr class="clsRowGreyBg">
                   <td>
                          <div id="btnToolbar"></div>
                   </td>
              </tr>
              <tr>
                     <td class="clsTopAlignment75">
                       <apex:outputPanel id="dummyoutputpanel">
                          <table class="clsTableS" cellspacing="0" cellpadding="0">
                             <tr>
                                   <td><div class="div15pxVspacing"/></td><td></td>
                             </tr>
                             <tr>
                                 <td class="clsInputLabelTD" > 
                                        <apex:outputLabel value="{!$Label.category}"/><span class="clsRequiredBlack">*</span>
                                 </td>
                                 <td class="clsInputTextBoxTD">
                                      <apex:inputField value="{!standardDescription.categoryId__c}" styleClass="clsInputTextBox" id="Category__c_id_name" onblur="showalldata(event)"/>
                                      <td class="lookupIconTD">
                                      <div class="lookUpIconDiv"><apex:commandButton onclick="openPopup('SearchPage?popupId=Category&isLookup=true',setCategoryNext);" reRender="dummy" styleClass="lookupIconOn"/>
                                      </div></td>
                                 </td>
                             </tr>
                          </table> 
                          <table class="clsTableS" cellspacing="0" cellpadding="0">
                               <tr>
                                     <td class="clsInputBoldLabelTableFirstRowTD" >
                                         <apex:outputLabel value="{!$Label.description}"/></td>
                               </tr>
                                <tr>
                                    <td class="clsInputTextAreaTD">
                                        <apex:inputTextarea value="{!category.categoryDescription__c}" disabled="true" id="Category__c_id_categorydescription__c"  styleClass="clsInputTextAreaPgWoSidePanelReadOnly" />  
                                    </td>
                                </tr>
                                <tr>
                                	<td> </td>
                                </tr>
                                 <tr>
                                      <td class="clsInputBoldLabelTD">
                                         <apex:outputLabel value="{!$Label.standardDescription}" /></td>
                                  </tr>
                                  <tr>  
                                       <td class="clsInputTextAreaTD">
                                                <apex:inputTextarea value="{!standardDescription.description__c}" styleClass="clsInputTextAreaPgWoSidePanel" />
                                       </td>
                                  </tr>
                           </table>
                           
                           <div class="div13pxVspacing"></div>
                           <table class="clsTableS" cellspacing="0" cellpadding="0">
                              <tr>
                                  <td class="clsInputCheckBox">
                                            <apex:inputField value="{!standardDescription.inactive__c}" />
                                            <apex:outputLabel value="{!$Label.inactive}" styleClass="clsInputCheckBoxLabel"/>
                                  </td>
                              </tr>
                          </table>  
                        </apex:outputPanel>         
                 </td>
               </tr>                
                <tr>
                    <td valign="top" style="padding-top: 10px;">
                            <c:detailSectionComponent objectName="StandardDescription__c" fKeyValue="{!id}" />  
                    </td>
                </tr>
      </table> 
      

      <c:tabOutComponent />  
      
     </apex:form>                           
	 </apex:outputPanel>
      </div>   
    
</apex:page>
                            	