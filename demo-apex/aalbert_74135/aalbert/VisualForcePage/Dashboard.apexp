<apex:page showHeader="false" controller="DashboardController">
<apex:stylesheet value="{!$Resource.ExtJS}/resources/css/ext-all.css" id="ext-all-css"/>
    <apex:includeScript value="{!$Resource.ExtJS}/adapter/ext/ext-base.js" id="ext-base-js"/>
    <apex:includeScript value="{!$Resource.ExtJS}/ext-all.js" id="ext-all-js"/>
 <style>

     .bgBlue {
        -moz-background-clip:border;
        -moz-background-inline-policy:continuous;
        -moz-background-origin:padding;
        background:transparent url({!$Resource.uipack}/Icons/bkheadergradient.png) repeat scroll 0 0;
        border:1px solid #A9A9A9;
        }
        
        .bgBlue .x-btn-text {
        -moz-background-clip:border;
        -moz-background-inline-policy:continuous;
        -moz-background-origin:padding;
        background:transparent url({!$Resource.uipack}/Icons/bkheadergradient.png) repeat scroll 0 0;
        color:white;
        font-family:tahoma,arial,verdana,sans-serif;
        font-size:11px;
        font-weight:bold;
        height:40px;
        }
        
        
        .bgGrey {
        -moz-background-clip:border;
        -moz-background-inline-policy:continuous;
        -moz-background-origin:padding;
        background:#06629F url({!$Resource.uipack}/Icons/button_bg.gif) repeat-x scroll 0 0;
        border:1px solid #A9A9A9;
        }

    bgGrey .x-btn-text {
    -moz-background-clip:border;
    -moz-background-inline-policy:continuous;
    -moz-background-origin:padding;
    background:#06629F url({!$Resource.uipack}/Icons/button_bg.gif) repeat-x scroll 0 0;
    color:white;
    font-family:tahoma,arial,verdana,sans-serif;
    font-size:11px;
    font-weight:bold;
    height:40px;
    }

    .x-btn-tl, .x-btn-tr, .x-btn-tc, .x-btn-ml, .x-btn-mr, .x-btn-mc, .x-btn-bl, .x-btn-br, .x-btn-bc {
        background: none;
    }
    .tBarCls {
      background: #DCDCDC;
      height:25px;
      
     -moz-border-radius-topleft:6px;
     -moz-border-radius-topright:6px;
      margin-top:5px;
      margin-bottom:5px;
      margin-left:5px;
      margin-right:8px;
    }
   
    .x-btn-split .x-btn-text {
         background:transparent url({!$Resource.Buttons}/Buttons/b_views_on.gif) no-repeat scroll 0 0; 
         margin-top:5px;
         margin-bottom:5px;
         padding:2px;
         width:35px; 
    }
   
   

    .x-btn-focus .x-btn-text {
        
         color:white;
         height:40px;
         font-family:Tahoma;
         font-size:11px;
         font-weight:bold;
    }


    .x-tool {
                margin-top:10px;
     }

    .x-tool-close {

         background:transparent url({!$Resource.Buttons}/Buttons/b_close.png) no-repeat scroll 0 0;
         margin-top:0px;
         margin-bottom:0px;
         padding-right:6px;
         padding-bottom:6px;
         margin-right:4px;
        

    }
    
    .x-tool-maximize {

         background:transparent url({!$Resource.Buttons}/Buttons/b_maximize.png) no-repeat scroll 0 0;
         margin-top:0px;
         margin-bottom:0px;
         padding-right:5px;
        
         padding-bottom:6px;

    }
    
    .x-tool-minimize {

        background:transparent url({!$Resource.Buttons}/Buttons/b_minimize.png) no-repeat scroll 0 0;
        margin-top:0px;
        margin-bottom:0px;
        padding-right:5px;
        padding-bottom:6px;
      

    }
    
    .x-tool-restore {

         background:transparent url({!$Resource.Buttons}/Buttons/b_restore.png) no-repeat scroll 0 0;
         margin-top:0px;
         margin-bottom:0px;
        padding-right:5px;
        padding-bottom:6px;

    }

  .x-tool-help{
       background:transparent url({!$Resource.Buttons}/Buttons/b_help.png) no-repeat scroll 0 0;
        margin-top:0px;
        margin-bottom:4px;
        padding-right:5px;
        padding-bottom:6px;

  }
  .x-tool-new{
        background:transparent url({!$Resource.Buttons}/Buttons/b_new.gif) no-repeat scroll 0 0;
        margin-top:0px;
        margin-bottom:0px;
        padding:3px;
       

  }
  
    .headerDefault .x-window-header{
        background-color: #339cde;
        padding-top:5px;
        
        
    }
    
    
     .headerBlue .x-window-header {

       -moz-background-clip:border;
        -moz-background-inline-policy:continuous;
        -moz-background-origin:padding;
        background:transparent url({!$Resource.uipack}/Icons/bkheadergradient.png) repeat scroll 0 0;
        padding-top:5px;
         

    }
  
     .headerLightBlue .x-window-header {
        -moz-background-clip:border;
        -moz-background-inline-policy:continuous;
        -moz-background-origin:padding;
        background:transparent url({!$Resource.uipack}/Icons/button_bg.gif) repeat scroll 0 0;
        padding-top:5px;

    }

    .headerLightBlue .x-window-header-text {
         color:#004376;
         padding-top:5px;
        
        

    }

    .x-window-header-text {
       background-repeat:repeat;
       border-color:#334f67;
       border-color-bottom:#DEECFD;
                
                color:white;
                height:40px;
                font-family:Tahoma;
                font-size:11px;
                font-weight:bold;
                border:0px;
                margin-left:5px;
         padding-top:20px;
         margin-top:3px;

    }
  
  
   </style>
    <apex:outputPanel id="varsPanelId">
        <script>
            var wListStr = '{!wList}';
            var enableView = {!enableView};
        </script>
    </apex:outputPanel>
      <apex:outputPanel id="op1">
    
            <apex:stylesheet value="{!URLFOR($Resource.BMCStyle, 'BMCStyleSheet.css')}"/>             
            <apex:stylesheet value="{!URLFOR($Resource.ExtJSStyle, 'ExtJSStyleSheet.css')}"/>     

        <script type="text/javascript">
        
        //Global variables:
        var tb;
        var skyWindow;
        var splitButton;
        var saveButton;
        var addButton;
        var SaveBtnHandler;
        var index = 1;
        var windowIndex = 0;
        var tabIndex = 0;
        var splitIndex = 0; 
        var counter = 0;
        
            //****
            
            
            function addTab(xPos, yPos, width, height, widgetId, quickview) {
            counter++;
            tempIndexTab = index++;
            
            var tabTitle = getTabTitle(quickview);
            
            if(Ext.get('tabId'+widgetId) == null) {
            tb.add( {
                id :'tabId' + widgetId,
                text : tabTitle,
                width : 70,              
                listeners: {
                    click :onItemToggle
                },
                pressed :true
           } )
           
           		if(Ext.get('splitId' + widgetId) == null) {
           		splitButton.menu.add( {
               		id :'splitId' + widgetId,
               		text :quickview ,
               		checked :false,
               		checkHandler :onItemCheck
           		} );
           		}
           }
           tb.doLayout();
           openPanel(xPos, yPos, width, height, widgetId, quickview );
           }
       
            
           function openPanel(xPos,  yPos, width1, height1, widgetId, quickview) {
                            //tempIndexWin = windowIndex-1;
                            //splitIndex = tempIndexWin;
                            
                            var originalTitle = quickview;
                            
                            win2 = new Ext.Window({

                                id :widgetId,
                                //title :'window ' + tempIndexWin,
                                title       : quickview,
                                renderTo    : skyWindow.body,
                                constrain   : true,
                                minWidth : 200,
                                minHeight : 200,
                                maximizable : true,
                                minimizable : true,
                                resizable : (! enableView ),
                                height      : height1,
                                width       : width1,
                                x : xPos,
                                y : yPos,
                                disabled : enableView ,
                                
                                tools:[
                                     
                                      {
                                          id: 'help',
                                          qtip: 'Help ',
                                          handler: function() {
                                          }

                                       }
                                       
                                 ],
                                defaultButton : 'tabId'+widgetId,
                                // html :'<iframe src =\"\/apex\/'+pageTarget+'\" style=\"width:100%;height:100%\"/>',
                                html :'<iframe id="container" src="/apex/underconstruction" style="width:100%;height:100%;border:none"></iframe>',
                                listeners : {
                                           
                                            close : function() {
                                                counter--;
                                                Ext.getCmp('tbId').remove('tabId' + widgetId, true);
                                                Ext.getCmp('splitButtonId').menu.remove( 'splitId' + widgetId, true);
                                               // index--;
                                               // Calling action Function.
                                               removeFromList(this.getId());

                                              
                                            },
                                            minimize : function(){
                                               /* this.hide();
                                                var tempId = this.id;
                                                var resTokens = tempId.split("winId");*/
                                                this.setAnimateTarget(this.defaultButton);
                                                this.hide();
                                             
                                             },
                                             maximize: function(){ 
                                                   this.focus();
                                                   db=this.defaultButton;
                                                   Ext.getCmp(db);            
                                                   this.setAnimateTarget(Ext.getCmp(db));
                                            },
                                            restore: function(){ 
                                                this.focus();
                                                this.setSize(300,200);
                                                
                                                
                                            },
                                            resize : function() {
                                                var windowTitle = getWindowTitle(originalTitle, this.getWidth());
                                                this.setTitle(windowTitle);
                                                updateList(this.getId(), this.getWidth(), this.getHeight(), this.getPosition()[0]-skyWindow.getPosition()[0], this.getPosition()[1]-skyWindow.getPosition()[1], originalTitle);    
                                            },
                                            
                                            move : function() {
                                                updateList(this.getId(), this.getWidth(), this.getHeight(), this.getPosition()[0]-skyWindow.getPosition()[0], this.getPosition()[1]-skyWindow.getPosition()[1], originalTitle);    
                                            }

                                            
                                }

                            });
                              
                            skyWindow.add(win2 );
                            win2.on('activate', function(){
                                var str = this.id;
                                colorChange(str);
                                this.focus();
                            } );
                            
                            win2.show();
                            //win2.maximize();
       }
            
            
            function onItemToggle(item, pressed) {
                    var str2 = item.id;
                    resTokens = str2.split("tabId");
                    
                    Ext.getCmp(resTokens[1]).show();
                    
                    var wListLocalStr = wListStr; 
                    wListLocalStr = wListLocalStr.substring(1, wListLocalStr.length - 1);
                    var wListStrArray = wListLocalStr.split(',');
                    
                    
                    var i=0;
                    while(i<wListStrArray.length) {
                        var el = wListStrArray[i];
                        /*if(el!=null && el[0] == ' '){
                            
                            el = el.substring(1, el.length);
                            alert('>'+el+'<');
                        }*/
                        if(el != null)
                            el = el.replace(/^\s*|\s*$/g, ""); 
                                                
                        if(Ext.getCmp(el) != null) {
                           if(el ==resTokens[1]){
                               (Ext.getCmp(el)).removeClass("headerDefault");
                               (Ext.getCmp(el)).removeClass("headerLightBlue");
                               (Ext.getCmp(el)).removeClass("headerBlue");
                               (Ext.getCmp(el)).addClass("headerBlue");
                           }else {
                               (Ext.getCmp(el)).removeClass("headerDefault");
                               (Ext.getCmp(el)).removeClass("headerBlue");
                               (Ext.getCmp(el)).removeClass("headerLightBlue");
                               (Ext.getCmp(el)).addClass("headerLightBlue");
                                       
                           }
                       }
                       
                       i++
 
                    }  

            }
            
           
           //On click of window 
           function colorChange(resTokens1) {

            var wListLocalStr = wListStr; 
            wListLocalStr = wListLocalStr.substring(1, wListLocalStr.length - 1);
            var wListStrArray = wListLocalStr.split(',');
            //Tabs
            var i=0;
            var size = wListStrArray.length;
            while(size >= 0) {
                var el = wListStrArray[size];
                
                /*if( el!=null && el[0] == ' '){
                    alert('Going for Tabs');
                    el = el.substring(1, el.length);
                }*/                     
                if(el != null)
                    el = el.replace(/^\s*|\s*$/g, "");                     
                
                if( Ext.getCmp(el) != null ) {
                           
                if(el ==resTokens1){
                    Ext.getCmp(el).removeClass("headerDefault");
                    Ext.getCmp(el).removeClass("headerLightBlue");
                    Ext.getCmp(el).removeClass("headerBlue");
                    Ext.getCmp(el).addClass("headerBlue");
                }
                else {
                    Ext.getCmp(el).removeClass("headerDefault");
                    Ext.getCmp(el).removeClass("headerBlue");
                    Ext.getCmp(el).removeClass("headerLightBlue");
                    Ext.getCmp(el).addClass("headerLightBlue");
                }
                }
                
                size--;
 
            }  
            
            //Window
                    
            var i=0;
            var size = wListStrArray.length;
            while(size >= 0) {
                var el = wListStrArray[size];
                /*if(el != null && el[0] == ' '){
                    alert('Going for Windows');
                    el = el.substring(1, el.length);
                }*/
                
                if(el != null)
                    el = el.replace(/^\s*|\s*$/g, "");                     
                
                el = 'tabId' + el;                     
                if(Ext.get(el)!=null) {
                    if(el == 'tabId' + resTokens1){
                        Ext.getCmp(el).removeClass("bgGrey");
                        Ext.getCmp(el).removeClass("bgBlue");
                        Ext.getCmp(el).addClass("bgBlue");
                    }
                    else {
                        Ext.getCmp(el).removeClass("bgBlue");
                        Ext.getCmp(el).removeClass("bgGrey");
                        Ext.getCmp(el).addClass("bgGrey");
                                       
                    }
                }
                
                size--;
 
             }  
           }               
 
            
            function onItemCheck(item, checked) {
              
             
              var wListLocalStr = wListStr; 
              wListLocalStr = wListLocalStr.substring(1, wListLocalStr.length - 1);
              var wListStrArray = wListLocalStr.split(',');
              
              
              //Cascade View
              if(item.id== 'splitCascadeId' && checked==true) {
                var x=50;
                var y=50;
                    
                for ( var i = 0; i <=100; i++) {
                    var el = wListStrArray[i];
                    
                    if(el != null)
                	    el = el.replace(/^\s*|\s*$/g, "");                     
                                     
                        
                if(Ext.getCmp(el) != null) {
                    if(Ext.getCmp(el).maximized==true)
                       Ext.getCmp(el).restore();
                    Ext.getCmp(el).setPosition(x, y);  
                    Ext.getCmp(el).show();
                    x=x+40;
                    y=y+50;
                }            
                
               }
               
               
              }
              
              //Tile View
              
              if(item.id== 'splitTileId' && checked==true) {
              var totalHeight=skyWindow.getHeight();
              var tiledHeight=0;
              var   tiledWidth=skyWindow.getWidth()/2;
              
               if(counter==2) {
                  tiledHeight=totalHeight;
               }else{
                   
                   if((counter%2)==0){
                      tiledHeight=(totalHeight/counter)*2;
                   }else{
                       tiledHeight=(totalHeight/(counter+1))*2;
                   }
               
               }
              
              var x=0;
              var y=0;
              var cFlag=0;
              for ( var i = 0; i <=100; i++) {
                    var el = wListStrArray[i];
                    if(el != null)
                	    el = el.replace(/^\s*|\s*$/g, "");                     
                                     
                        
                if(Ext.getCmp(el) != null) {
                                if(Ext.getCmp(el).maximized==true)
                                    Ext.getCmp(el).restore();
                                Ext.getCmp(el).setPosition(x, y);  
                              
                                Ext.getCmp(el).setHeight(tiledHeight);
                               
                                Ext.getCmp(el).setWidth(tiledWidth);
                                Ext.getCmp(el).show();
                                cFlag++;
                                x=x+400;
                                if((cFlag%2)==0) {
                                    x=0;
                                    y=y+tiledHeight;
                              }
                        }
                     
              }
            }
      
              
              
              
             
             
             }     
              
             
            function getTabTitle(title){
                var titleText = '';
                if(title!=null && title!=''){
                    if(title.length > 10){
                        titleText = title.substring(0,7) + '...';
                    }else{
                        titleText = title;
                    }
                }
                return titleText;
            }
            
              
            function getWindowTitle(title,width){
                var titleText = '';
                if(title!=null && title!=''){
                    chars = (width - 95)/7;


                if(title.length > chars){
                    titleText = title.substring(0,chars-3) + '...';
                }else{
                    titleText = title;
                    }
                }

                return titleText;

            }  
            
                        //****
            
            SaveBtnHandler = function(button, event) { saveState(); };
        
            function addTabBtn() {
                            
                            var quickview = showModalDialog("/apex/SearchPage?popupId=Quickview","searchpage","dialogWidth=600px; dialogHeight=600px; resizable=yes");
                            if(quickview != null && quickview  != '' ){
                                //Calling action function
                                addToList(quickview);
                            }
            }
          
                
                Ext.onReady( function() {
                
                        Ext.QuickTips.init();   
                        
                        tb = new Ext.Toolbar( {
                            id :'tbId',
                            width :'auto',
                            renderTo :'menubar'
                        });
                        

                        skyWindow = new Ext.Window({
                            renderTo    : 'skyWind',
                            baseCls : 'sky',
                            width       : '100%',
                            height      : 640,
                            resizable : false,
                            closable : false,
                            bodyStyle:{"background-color":"WHITE"}
                        });
                        
                        splitButton = new Ext.Toolbar.SplitButton( {

                            id :'splitButtonId',
                            text :' ',
                            iconCls :'blist',
                            scale : 'medium',
                            menu : {
                                items : [{
                                            id :'splitCascadeId',
                                            text :'Cascade',
                                            checked : false,
                                            checkHandler:onItemCheck
                                       },
                                       {
                                            id :'splitTileId',
                                            text :'Tile',
                                            checked : false,
                                            checkHandler:onItemCheck
                                       }]

                            },
                            
                            disabled : enableView 
                            
                        });

                        saveButton = new Ext.Button( {

                            id :'saveButtonId',

                            text :'',
                            
                            scale: 'medium',
                            
                            iconCls : 'bmcSave',
                            
                            handler: SaveBtnHandler,
                            
                            tooltip: '{!$Label.save}'
                        });
                        
                        
                        addButton = new Ext.Button( {
                            text :'',
                            
                            id : 'addButtonId',
                            
                            handler :addTabBtn,
                            
                            scale: 'medium',
                            
                            iconCls :'bmcNew',
                            
                            tooltip: '{!$Label.new}',
                            
                            disabled : enableView 
                            
                        });

                           tb.add(splitButton);
                           
                           tb.add(addButton); 

                           tb.add(saveButton);
                           
                           

                        tb.doLayout();

                         skyWindow.show();
                         
                        <apex:repeat value="{!wList}" var="widget">
                            //alert('HEIGHT:'+'{!widget.height__c}');
                            addTab('{!widget.xPos__c}','{!widget.yPos__c}','{!widget.width__c}', '{!widget.height__c}', '{!widget.Id}', '{!widget.quickview__r.Name}');
                        </apex:repeat>
                        
                        
                         
                    });
                    
      
        
        </script>        


     
    <apex:form >
    
    <apex:actionFunction name="updateList" action="{!updateList}" reRender="varsPanelId">
        <apex:param assignTo="{!windowId}" name="windowId" value=""/>
        <apex:param assignTo="{!width}" name="width" value=""/>
        <apex:param assignTo="{!height}" name="height" value=""/>
        <apex:param assignTo="{!xPos}" name="xPos" value=""/>
        <apex:param assignTo="{!yPos}" name="yPos" value=""/>
        
        <!-- <apex:param assignTo="{!position}" name="savedName" value=""/> -->
        
    </apex:actionFunction>
    
    
    <apex:actionFunction name="removeFromList" action="{!removeFromList}" reRender="varsPanelId">
        <apex:param assignTo="{!windowId}" name="windowId" value=""/>
    </apex:actionFunction>    
    
    <apex:actionFunction name="addToList" action="{!addToList}" oncomplete="addTab(200, 200, 200, 200, '{!lastId}', '{!lastQuickView}')" reRender="varsPanelId">
        <apex:param assignTo="{!lastQuickView}" name="lastQuickView" value=""/>
    </apex:actionFunction>    

    <apex:actionFunction name="saveState" action="{!save}" rerender="varsPanelId" />
    
    <div id="menubar"></div>

    <div  id="skyWind" style="margin-top:300px"></div>
    </apex:form>

    </apex:outputPanel>

</apex:page>
                            	